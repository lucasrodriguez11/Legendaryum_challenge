{
    "swagger": "2.0",
    "info": {
        "description": "API RESTful para gestión de tareas desarrollada en Go.",
        "title": "Legendaryum Task Management API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Autentica a un usuario y devuelve un token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Iniciar sesión",
                "parameters": [
                    {
                        "description": "Credenciales de inicio de sesión",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login exitoso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error en los datos de entrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Credenciales inválidas",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Crea una nueva cuenta de usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registrar un nuevo usuario",
                "parameters": [
                    {
                        "description": "Datos de registro",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuario creado exitosamente",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error en los datos de entrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Obtiene todas las tareas donde el usuario autenticado es el creador o el asignado. Permite filtrar por estado y prioridad.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Listar tareas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filtrar por estado de la tarea ('pending', 'in_progress', 'complete')",
                        "name": "status",
                        "in": "query",
                        "enum": [
                            "pending",
                            "in_progress",
                            "complete"
                        ]
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por prioridad de la tarea ('low', 'medium', 'high')",
                        "name": "priority",
                        "in": "query",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de tareas\" // Usar array de models.Task",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "401": {
                        "description": "No autorizado (token JWT faltante o inválido)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Crea una nueva tarea en el sistema Legendaryum. El creador se toma del token JWT. Si assignee_id no se especifica, la tarea se asigna al creador.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Crear una nueva tarea",
                "parameters": [
                    {
                        "description": "Datos necesarios para crear una tarea",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tarea creada exitosamente\" // Usar models.Task para la respuesta completa",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Error en los datos de entrada (JSON inválido, campos requeridos, assignee no encontrado)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No autorizado (token JWT faltante o inválido)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Obtiene los detalles de una tarea por su ID si el usuario autenticado es el creador o el asignado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Obtener una tarea específica",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint",
                        "description": "ID numérico de la tarea a obtener",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detalles de la tarea\" // Usar models.Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No autorizado (token JWT faltante o inválido)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Acceso denegado (la tarea no pertenece al usuario)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Tarea no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Actualiza los datos de una tarea existente. Solo el creador de la tarea puede actualizarla.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Actualizar una tarea",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint",
                        "description": "ID numérico de la tarea a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos para actualizar la tarea",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tarea actualizada exitosamente\" // Usar models.Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Error en los datos de entrada (ID inválido, JSON inválido, nuevo assignee no encontrado)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No autorizado (token JWT faltante o inválido)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permiso denegado (solo el creador puede actualizar)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Tarea no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Elimina una tarea existente por su ID. Solo el creador de la tarea puede eliminarla.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Eliminar una tarea",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint",
                        "description": "ID numérico de la tarea a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tarea eliminada exitosamente\" // Usar una respuesta simple para eliminación",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "No autorizado (token JWT faltante o inválido)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permiso denegado (solo el creador puede eliminar)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Tarea no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje descriptivo del error",
                    "type": "string",
                    "example": "Detalles del error"
                },
                "status": {
                    "description": "Estado de la respuesta (generalmente \"error\")",
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje descriptivo de la operación",
                    "type": "string",
                    "example": "Operación exitosa"
                },
                "status": {
                    "description": "Estado de la respuesta (generalmente \"success\")",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "assignee": {
                    "$ref": "#/definitions/models.User"
                },
                "assignee_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/models.User"
                },
                "creator_id": {
                    "description": "ID del creador",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TaskRequest": {
            "type": "object",
            "required": [
                "description",
                "due_date",
                "title"
            ],
            "properties": {
                "assignee_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "priority": {
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "in_progress",
                        "complete"
                    ]
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}